// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package daemon

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/cilium/cilium/api/v1/models"
)

// NewPutClusterNodesNeighParams creates a new PutClusterNodesNeighParams object
// with the default values initialized.
func NewPutClusterNodesNeighParams() *PutClusterNodesNeighParams {
	var ()
	return &PutClusterNodesNeighParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPutClusterNodesNeighParamsWithTimeout creates a new PutClusterNodesNeighParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPutClusterNodesNeighParamsWithTimeout(timeout time.Duration) *PutClusterNodesNeighParams {
	var ()
	return &PutClusterNodesNeighParams{

		timeout: timeout,
	}
}

// NewPutClusterNodesNeighParamsWithContext creates a new PutClusterNodesNeighParams object
// with the default values initialized, and the ability to set a context for a request
func NewPutClusterNodesNeighParamsWithContext(ctx context.Context) *PutClusterNodesNeighParams {
	var ()
	return &PutClusterNodesNeighParams{

		Context: ctx,
	}
}

// NewPutClusterNodesNeighParamsWithHTTPClient creates a new PutClusterNodesNeighParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPutClusterNodesNeighParamsWithHTTPClient(client *http.Client) *PutClusterNodesNeighParams {
	var ()
	return &PutClusterNodesNeighParams{
		HTTPClient: client,
	}
}

/*PutClusterNodesNeighParams contains all the parameters to send to the API endpoint
for the put cluster nodes neigh operation typically these are written to a http.Request
*/
type PutClusterNodesNeighParams struct {

	/*Request*/
	Request *models.NodeNeighRequest

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the put cluster nodes neigh params
func (o *PutClusterNodesNeighParams) WithTimeout(timeout time.Duration) *PutClusterNodesNeighParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put cluster nodes neigh params
func (o *PutClusterNodesNeighParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put cluster nodes neigh params
func (o *PutClusterNodesNeighParams) WithContext(ctx context.Context) *PutClusterNodesNeighParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put cluster nodes neigh params
func (o *PutClusterNodesNeighParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put cluster nodes neigh params
func (o *PutClusterNodesNeighParams) WithHTTPClient(client *http.Client) *PutClusterNodesNeighParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put cluster nodes neigh params
func (o *PutClusterNodesNeighParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithRequest adds the request to the put cluster nodes neigh params
func (o *PutClusterNodesNeighParams) WithRequest(request *models.NodeNeighRequest) *PutClusterNodesNeighParams {
	o.SetRequest(request)
	return o
}

// SetRequest adds the request to the put cluster nodes neigh params
func (o *PutClusterNodesNeighParams) SetRequest(request *models.NodeNeighRequest) {
	o.Request = request
}

// WriteToRequest writes these params to a swagger request
func (o *PutClusterNodesNeighParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Request != nil {
		if err := r.SetBodyParam(o.Request); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
